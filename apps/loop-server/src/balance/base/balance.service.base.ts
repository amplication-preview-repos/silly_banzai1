/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Balance as PrismaBalance } from "@prisma/client";

export class BalanceServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.BalanceCountArgs, "select">): Promise<number> {
    return this.prisma.balance.count(args);
  }

  async balances(args: Prisma.BalanceFindManyArgs): Promise<PrismaBalance[]> {
    return this.prisma.balance.findMany(args);
  }
  async balance(
    args: Prisma.BalanceFindUniqueArgs
  ): Promise<PrismaBalance | null> {
    return this.prisma.balance.findUnique(args);
  }
  async createBalance(args: Prisma.BalanceCreateArgs): Promise<PrismaBalance> {
    return this.prisma.balance.create(args);
  }
  async updateBalance(args: Prisma.BalanceUpdateArgs): Promise<PrismaBalance> {
    return this.prisma.balance.update(args);
  }
  async deleteBalance(args: Prisma.BalanceDeleteArgs): Promise<PrismaBalance> {
    return this.prisma.balance.delete(args);
  }
}
